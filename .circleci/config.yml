---
version: 2.1 # Use 2.1 to enable using orbs and other features.

# Declare the orbs that we'll use in our config.
# read more about orbs: https://circleci.com/docs/2.0/orb-intro/
orbs:
  ruby: circleci/ruby@2.1.0
  node: circleci/node@2
  browser-tools: circleci/browser-tools@1.3.0

jobs:
  build: # our first job, named "build"
    docker:
      - image: cimg/ruby:3.2.2-browsers

    steps:
      - checkout # pull down our git code.
      - ruby/install-deps # use the ruby orb to install dependencies
      # use the node orb to install our packages with pnpm and cache using pnpm-lock.yaml
      - node/install-packages:
          pkg-manager: pnpm
          cache-key: "pnpm-lock.yaml"

  test:  # our next job, called "test"
    docker:
      - image: cimg/ruby:3.2.2-browsers
      - image: cimg/postgres:14.9
        environment:
          - POSTGRES_USER=circleci
          - POSTGRES_DB=oauth2id_test
          - POSTGRES_HOST_AUTH_METHOD=trust

    # we run "parallel job containers" to enable speeding up our tests;
    # this splits our tests across multiple containers.
    parallelism: 3

    # environment variables specific to Ruby/Rails, applied to the primary container.
    environment:
      BUNDLE_JOBS: "3"
      BUNDLE_RETRY: "3"
      RAILS_ENV: test
      OAUTH2ID_DB_USERNAME: circleci
      OAUTH2ID_TEST_DB_NAME: oauth2id_test
      OAUTH2ID_DB_HOST: localhost

    # A series of steps to run, some are similar to those in "build".
    steps:
      - checkout
      - browser-tools/install-chrome
      - ruby/install-deps
      - node/install-packages:
          pkg-manager: pnpm
          cache-key: "pnpm-lock.yaml"
      - run:
          name: Check browser install
          command: |
            google-chrome --version
      - run:
          name: Restore DB config
          command: cp config/database.yml.sample config/database.yml
      - run:
          name: Fix mutex_m version CI errors
          command: sed -i 's/mutex_m (0.2.0)/mutex_m (0.1.2)/g' Gemfile.lock
      - run:
          name: Database setup
          command: bundle exec rails db:schema:load --trace
      - run:
          name: run tests
          command: bin/rails test:all

# We use workflows to orchestrate the jobs that we declared above.
workflows:
  version: 2
  build_and_test:     # The name of our workflow is "build_and_test"
    jobs:             # The list of jobs we run as part of this workflow.
      - build         # Run build first.
      - test:         # Then run test,
          requires:   # Test requires that build passes for it to run.
            - build   # Finally, run the build job.
