---
image: circleci/ruby:3.0.3-node-browsers

variables:
  NO_ORACLE_ENHANCED: "true"
  NO_TINY_TDS: "true"
  CACHE_FALLBACK_KEY: "$CI_COMMIT_REF_SLUG"

before_script:
  - gem install bundler
  - bundle config set path 'vendor'  # Install dependencies into ./vendor/ruby
  - sed -i 's/mutex_m (0.2.0)/mutex_m (0.1.1)/g' Gemfile.lock
  - export PATH="$HOME/.local/bin:$HOME/.npm-global/bin:$PATH"
  - |
    if command -v corepack >/dev/null; then
      mkdir -p "$HOME/.local/bin"
      corepack enable pnpm --install-directory "$HOME/.local/bin"
      corepack prepare pnpm@latest --activate
    else
      export npm_config_prefix="$HOME/.npm-global"
      mkdir -p "$npm_config_prefix"
      npm install -g pnpm@8
    fi

stages:
  - test
  - deploy

stages:
  - test

test:
  stage: test
  cache:
    - key:
        files:
          - Gemfile.lock
      paths:
        - vendor/ruby
    - key:
        files:
          - pnpm-lock.yaml
      paths:
        - ".pnpm-store/"
  script:
    - bundle install -j $(nproc)
    - pnpm install --frozen-lockfile --store-dir .pnpm-store
    - cp config/database.yml.sample config/database.yml
    - echo $PRODUCTION_MASTER_KEY > config/master.key
    - bundle exec rails db:migrate RAILS_ENV=test
    - bundle exec rails test:all

deploy_production:
  cache:
    - key:
        files:
          - Gemfile.lock
      paths:
        - vendor/ruby
  stage: deploy
  script:
    - bundle install -j $(nproc)
    - mkdir ~/.ssh
    - mv "$SSH_ID_RSA" ~/.ssh/id_rsa
    - mv "$SSH_CONFIG_FILE" ~/.ssh/config
    - bundle exec cap production deploy
  environment:
    name: production
    url: https://sso.thape.com.cn
  when: manual
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
